

# System.Int32
ldarg.0
ldind.i4
ldarg.1
ldarg.2
call Int32 WriteInt32(Int32, Byte*, Int32)
ret



# System.Boolean
ldarg.0
ldind.i1
ldarg.1
ldarg.2
call Int32 WriteBoolean(Boolean, Byte*, Int32)
ret



# System.Byte
ldarg.0
ldind.u1
conv.u4
ldarg.1
ldarg.2
call Int32 WriteUInt32(UInt32, Byte*, Int32)
ret



# System.Char
ldarg.0
ldind.u2
ldarg.1
ldarg.2
call Int32 WriteCharUtf8(Char, Byte*, Int32)
ret



# System.DateTime
ldarg.0
ldobj System.DateTime
ldarg.1
ldarg.2
call Int32 WriteDateTime8601(System.DateTime, Byte*, Int32)
ret



# System.Decimal
ldarg.0
ldobj System.Decimal
ldarg.1
ldarg.2
call Int32 WriteDecimal(System.Decimal, Byte*, Int32)
ret



# System.Double
ldarg.0
ldind.r8
ldarg.1
ldarg.2
call Int32 WriteDouble(Double, Byte*, Int32)
ret



# System.Int16
ldarg.0
ldind.i2
conv.i4
ldarg.1
ldarg.2
call Int32 WriteInt32(Int32, Byte*, Int32)
ret



# System.Int64
ldarg.0
ldind.i8
ldarg.1
ldarg.2
call Int32 WriteInt64(Int64, Byte*, Int32)
ret



# System.SByte
ldarg.0
ldind.i1
conv.i4
ldarg.1
ldarg.2
call Int32 WriteInt32(Int32, Byte*, Int32)
ret



# System.Single
ldarg.0
ldind.r4
ldarg.1
ldarg.2
call Int32 WriteSingle(Single, Byte*, Int32)
ret



# System.String
ldarg.0
ldind.ref
ldarg.1
ldarg.2
call Int32 WriteStringUtf8(System.String, Byte*, Int32)
ret



# System.UInt16
ldarg.0
ldind.u2
conv.u4
ldarg.1
ldarg.2
call Int32 WriteUInt32(UInt32, Byte*, Int32)
ret



# System.UInt32
ldarg.0
ldind.u4
ldarg.1
ldarg.2
call Int32 WriteUInt32(UInt32, Byte*, Int32)
ret



# System.UInt64
ldarg.0
ldind.i8
ldarg.1
ldarg.2
call Int32 WriteUInt64(UInt64, Byte*, Int32)
ret



# System.Nullable<System.Int32>
ldarg.0
dup
call Boolean get_HasValue()
brtrue.s HasValue_true
pop
ldarg.1
ldarg.2
call Int32 WriteNull(Byte*, Int32)
br.s theEnd

HasValue_true:
call Int32 GetValueOrDefault()
ldarg.1
ldarg.2
call Int32 WriteInt32(Int32, Byte*, Int32)

theEnd:
ret



# System.Nullable<System.Boolean>
ldarg.0
dup
call Boolean get_HasValue()
brtrue.s HasValue_true
pop
ldarg.1
ldarg.2
call Int32 WriteNull(Byte*, Int32)
br.s theEnd

HasValue_true:
call Boolean GetValueOrDefault()
ldarg.1
ldarg.2
call Int32 WriteBoolean(Boolean, Byte*, Int32)

theEnd:
ret



# System.Nullable<System.Byte>
ldarg.0
dup
call Boolean get_HasValue()
brtrue.s HasValue_true
pop
ldarg.1
ldarg.2
call Int32 WriteNull(Byte*, Int32)
br.s theEnd

HasValue_true:
call Byte GetValueOrDefault()
conv.u4
ldarg.1
ldarg.2
call Int32 WriteUInt32(UInt32, Byte*, Int32)

theEnd:
ret



# System.Nullable<System.Char>
ldarg.0
dup
call Boolean get_HasValue()
brtrue.s HasValue_true
pop
ldarg.1
ldarg.2
call Int32 WriteNull(Byte*, Int32)
br.s theEnd

HasValue_true:
call Char GetValueOrDefault()
ldarg.1
ldarg.2
call Int32 WriteCharUtf8(Char, Byte*, Int32)

theEnd:
ret



# System.Nullable<System.DateTime>
ldarg.0
dup
call Boolean get_HasValue()
brtrue.s HasValue_true
pop
ldarg.1
ldarg.2
call Int32 WriteNull(Byte*, Int32)
br.s theEnd

HasValue_true:
call System.DateTime GetValueOrDefault()
ldarg.1
ldarg.2
call Int32 WriteDateTime8601(System.DateTime, Byte*, Int32)

theEnd:
ret



# System.Nullable<System.Decimal>
ldarg.0
dup
call Boolean get_HasValue()
brtrue.s HasValue_true
pop
ldarg.1
ldarg.2
call Int32 WriteNull(Byte*, Int32)
br.s theEnd

HasValue_true:
call System.Decimal GetValueOrDefault()
ldarg.1
ldarg.2
call Int32 WriteDecimal(System.Decimal, Byte*, Int32)

theEnd:
ret



# System.Nullable<System.Double>
ldarg.0
dup
call Boolean get_HasValue()
brtrue.s HasValue_true
pop
ldarg.1
ldarg.2
call Int32 WriteNull(Byte*, Int32)
br.s theEnd

HasValue_true:
call Double GetValueOrDefault()
ldarg.1
ldarg.2
call Int32 WriteDouble(Double, Byte*, Int32)

theEnd:
ret



# System.Nullable<System.Int16>
ldarg.0
dup
call Boolean get_HasValue()
brtrue.s HasValue_true
pop
ldarg.1
ldarg.2
call Int32 WriteNull(Byte*, Int32)
br.s theEnd

HasValue_true:
call Int16 GetValueOrDefault()
conv.i4
ldarg.1
ldarg.2
call Int32 WriteInt32(Int32, Byte*, Int32)

theEnd:
ret



# System.Nullable<System.Int64>
ldarg.0
dup
call Boolean get_HasValue()
brtrue.s HasValue_true
pop
ldarg.1
ldarg.2
call Int32 WriteNull(Byte*, Int32)
br.s theEnd

HasValue_true:
call Int64 GetValueOrDefault()
ldarg.1
ldarg.2
call Int32 WriteInt64(Int64, Byte*, Int32)

theEnd:
ret



# System.Nullable<System.SByte>
ldarg.0
dup
call Boolean get_HasValue()
brtrue.s HasValue_true
pop
ldarg.1
ldarg.2
call Int32 WriteNull(Byte*, Int32)
br.s theEnd

HasValue_true:
call SByte GetValueOrDefault()
conv.i4
ldarg.1
ldarg.2
call Int32 WriteInt32(Int32, Byte*, Int32)

theEnd:
ret



# System.Nullable<System.Single>
ldarg.0
dup
call Boolean get_HasValue()
brtrue.s HasValue_true
pop
ldarg.1
ldarg.2
call Int32 WriteNull(Byte*, Int32)
br.s theEnd

HasValue_true:
call Single GetValueOrDefault()
ldarg.1
ldarg.2
call Int32 WriteSingle(Single, Byte*, Int32)

theEnd:
ret



# System.Nullable<System.UInt16>
ldarg.0
dup
call Boolean get_HasValue()
brtrue.s HasValue_true
pop
ldarg.1
ldarg.2
call Int32 WriteNull(Byte*, Int32)
br.s theEnd

HasValue_true:
call UInt16 GetValueOrDefault()
conv.u4
ldarg.1
ldarg.2
call Int32 WriteUInt32(UInt32, Byte*, Int32)

theEnd:
ret



# System.Nullable<System.UInt32>
ldarg.0
dup
call Boolean get_HasValue()
brtrue.s HasValue_true
pop
ldarg.1
ldarg.2
call Int32 WriteNull(Byte*, Int32)
br.s theEnd

HasValue_true:
call UInt32 GetValueOrDefault()
ldarg.1
ldarg.2
call Int32 WriteUInt32(UInt32, Byte*, Int32)

theEnd:
ret



# System.Nullable<System.UInt64>
ldarg.0
dup
call Boolean get_HasValue()
brtrue.s HasValue_true
pop
ldarg.1
ldarg.2
call Int32 WriteNull(Byte*, Int32)
br.s theEnd

HasValue_true:
call UInt64 GetValueOrDefault()
ldarg.1
ldarg.2
call Int32 WriteUInt64(UInt64, Byte*, Int32)

theEnd:
ret



# System.Guid
ldarg.0
ldobj System.Guid
ldarg.1
ldarg.2
call Int32 WriteGuidFormatD(System.Guid, Byte*, Int32)
ret



# System.Nullable<System.Guid>
ldarg.0
dup
call Boolean get_HasValue()
brtrue.s HasValue_true
pop
ldarg.1
ldarg.2
call Int32 WriteNull(Byte*, Int32)
br.s theEnd

HasValue_true:
call System.Guid GetValueOrDefault()
ldarg.1
ldarg.2
call Int32 WriteGuidFormatD(System.Guid, Byte*, Int32)

theEnd:
ret



# Cameronism.Json.Tests.DelegateBuilderTest+B<System.Int32>
ldarg.1
stloc.0
ldarg.2
stloc.1
ldloc.1
ldarg.0
ldind.ref
dup
brtrue.s IfNotNull_0
pop
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_2
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_2:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
ldc.i4.4
br ifNull_1

IfNotNull_0:
ldloc.1
ldc.i4.7
bge.s enoughAvailable_3
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_3:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.2
bge.s enoughAvailable_4
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_4:
call Int32 get_i()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_5
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_5:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1
ldloc.1
sub

ifNull_1:
ret



# Cameronism.Json.Tests.DelegateBuilderTest+B<System.Int32, System.Int32>
ldarg.1
stloc.0
ldarg.2
stloc.1
ldloc.1
ldarg.0
ldind.ref
dup
brtrue.s IfNotNull_0
pop
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_2
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_2:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
ldc.i4.4
br ifNull_1

IfNotNull_0:
ldloc.1
ldc.i4.s 13
bge.s enoughAvailable_3
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_3:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.8
bge.s enoughAvailable_4
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_4:
dup
call Int32 get_i()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_5
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_5:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.1
ldc.i4.7
bge.s enoughAvailable_6
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_6:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 106
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.2
bge.s enoughAvailable_7
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_7:
call Int32 get_j()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_8
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_8:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1
ldloc.1
sub

ifNull_1:
ret



# Cameronism.Json.Tests.DelegateBuilderTest+B<System.Int32, Cameronism.Json.Tests.DelegateBuilderTest+B<System.Int32>>
ldarg.1
stloc.0
ldarg.2
stloc.1
ldloc.1
ldarg.0
ldind.ref
dup
brtrue.s IfNotNull_0
pop
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_2
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_2:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
ldc.i4.4
br ifNull_1

IfNotNull_0:
ldloc.1
ldc.i4.s 19
bge.s enoughAvailable_3
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_3:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 14
bge.s enoughAvailable_4
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_4:
dup
call Int32 get_i()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_5
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_5:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.1
ldc.i4.s 13
bge.s enoughAvailable_6
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_6:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 106
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.8
bge.s enoughAvailable_7
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_7:
call B`1 get_j()
dup
brtrue.s IfNotNull_8
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_10
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_10:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
br.s ifNull_9

IfNotNull_8:
ldloc.1
ldc.i4.7
bge.s enoughAvailable_11
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_11:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.2
bge.s enoughAvailable_12
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_12:
call Int32 get_i()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_13
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_13:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1

ifNull_9:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1
ldloc.1
sub

ifNull_1:
ret



# Cameronism.Json.Tests.DelegateBuilderTest+B<Cameronism.Json.Tests.DelegateBuilderTest+B<System.Int32>, System.Int32>
ldarg.1
stloc.0
ldarg.2
stloc.1
ldloc.1
ldarg.0
ldind.ref
dup
brtrue.s IfNotNull_0
pop
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_2
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_2:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
ldc.i4.4
br ifNull_1

IfNotNull_0:
ldloc.1
ldc.i4.s 19
bge.s enoughAvailable_3
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_3:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 14
bge.s enoughAvailable_4
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_4:
dup
call B`1 get_i()
dup
brtrue.s IfNotNull_5
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_7
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_7:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
br ifNull_6

IfNotNull_5:
ldloc.1
ldc.i4.7
bge.s enoughAvailable_8
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_8:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.2
bge.s enoughAvailable_9
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_9:
call Int32 get_i()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_10
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_10:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1

ifNull_6:
ldloc.1
ldc.i4.s 10
bge.s enoughAvailable_11
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_11:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 106
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.5
bge.s enoughAvailable_12
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_12:
call Int32 get_j()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_13
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_13:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1
ldloc.1
sub

ifNull_1:
ret



# Cameronism.Json.Tests.DelegateBuilderTest+B<Cameronism.Json.Tests.DelegateBuilderTest+B<System.Int32, Cameronism.Json.Tests.DelegateBuilderTest+B<System.Int32>>, System.Int32>
ldarg.1
stloc.0
ldarg.2
stloc.1
ldloc.1
ldarg.0
ldind.ref
dup
brtrue.s IfNotNull_0
pop
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_2
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_2:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
ldc.i4.4
br ifNull_1

IfNotNull_0:
ldloc.1
ldc.i4.s 28
bge.s enoughAvailable_3
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_3:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 23
bge.s enoughAvailable_4
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_4:
dup
call B`2 get_i()
dup
brtrue.s IfNotNull_5
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_7
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_7:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
br ifNull_6

IfNotNull_5:
ldloc.1
ldc.i4.s 19
bge.s enoughAvailable_8
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_8:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 14
bge.s enoughAvailable_9
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_9:
dup
call Int32 get_i()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_10
pop
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_10:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.1
ldc.i4.s 13
bge.s enoughAvailable_11
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_11:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 106
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.8
bge.s enoughAvailable_12
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_12:
call B`1 get_j()
dup
brtrue.s IfNotNull_13
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_15
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_15:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
br ifNull_14

IfNotNull_13:
ldloc.1
ldc.i4.7
bge.s enoughAvailable_16
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_16:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.2
bge.s enoughAvailable_17
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_17:
call Int32 get_i()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_18
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_18:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1

ifNull_14:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1

ifNull_6:
ldloc.1
ldc.i4.s 19
bge.s enoughAvailable_19
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_19:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 106
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 14
bge.s enoughAvailable_20
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_20:
call Int32 get_j()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_21
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_21:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1
ldloc.1
sub

ifNull_1:
ret



# Cameronism.Json.Tests.DelegateBuilderTest+B<System.Int32, Cameronism.Json.Tests.DelegateBuilderTest+B<Cameronism.Json.Tests.DelegateBuilderTest+B<System.Int32, Cameronism.Json.Tests.DelegateBuilderTest+B<System.Int32>>>>
ldarg.1
stloc.0
ldarg.2
stloc.1
ldloc.1
ldarg.0
ldind.ref
dup
brtrue.s IfNotNull_0
pop
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_2
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_2:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
ldc.i4.4
br ifNull_1

IfNotNull_0:
ldloc.1
ldc.i4.s 22
bge.s enoughAvailable_3
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_3:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 17
bge.s enoughAvailable_4
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_4:
dup
call Int32 get_i()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_5
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_5:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.1
ldc.i4.s 16
bge.s enoughAvailable_6
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_6:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 106
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 11
bge.s enoughAvailable_7
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_7:
call B`1 get_j()
dup
brtrue.s IfNotNull_8
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_10
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_10:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
br ifNull_9

IfNotNull_8:
ldloc.1
ldc.i4.s 22
bge.s enoughAvailable_11
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_11:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 17
bge.s enoughAvailable_12
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_12:
call B`2 get_i()
dup
brtrue.s IfNotNull_13
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_15
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_15:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
br ifNull_14

IfNotNull_13:
ldloc.1
ldc.i4.s 19
bge.s enoughAvailable_16
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_16:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 14
bge.s enoughAvailable_17
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_17:
dup
call Int32 get_i()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_18
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_18:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.1
ldc.i4.s 13
bge.s enoughAvailable_19
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_19:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 106
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.8
bge.s enoughAvailable_20
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_20:
call B`1 get_j()
dup
brtrue.s IfNotNull_21
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_23
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_23:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
br.s ifNull_22

IfNotNull_21:
ldloc.1
ldc.i4.7
bge.s enoughAvailable_24
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_24:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.2
bge.s enoughAvailable_25
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_25:
call Int32 get_i()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_26
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_26:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1

ifNull_22:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1

ifNull_14:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1

ifNull_9:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1
ldloc.1
sub

ifNull_1:
ret



# Cameronism.Json.Tests.DelegateBuilderTest+B<System.Guid, Cameronism.Json.Tests.DelegateBuilderTest+B<Cameronism.Json.Tests.DelegateBuilderTest+B<System.Int32, Cameronism.Json.Tests.DelegateBuilderTest+B<System.Int32, System.Nullable<System.Guid>>>>>
ldarg.1
stloc.0
ldarg.2
stloc.1
ldloc.1
ldarg.0
ldind.ref
dup
brtrue.s IfNotNull_0
pop
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_2
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_2:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
ldc.i4.4
br ifNull_1

IfNotNull_0:
ldloc.1
ldc.i4.s 23
bge.s enoughAvailable_3
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_3:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 18
bge.s enoughAvailable_4
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_4:
dup
call System.Guid get_i()
ldloc.0
ldloc.1
call Int32 WriteGuidFormatD(System.Guid, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_5
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_5:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.1
ldc.i4.s 16
bge.s enoughAvailable_6
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_6:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 106
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 11
bge.s enoughAvailable_7
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_7:
call B`1 get_j()
dup
brtrue.s IfNotNull_8
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_10
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_10:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
br ifNull_9

IfNotNull_8:
ldloc.1
ldc.i4.s 22
bge.s enoughAvailable_11
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_11:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 17
bge.s enoughAvailable_12
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_12:
call B`2 get_i()
dup
brtrue.s IfNotNull_13
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_15
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_15:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
br ifNull_14

IfNotNull_13:
ldloc.1
ldc.i4.s 26
bge.s enoughAvailable_16
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_16:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 21
bge.s enoughAvailable_17
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_17:
dup
call Int32 get_i()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_18
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_18:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.1
ldc.i4.s 20
bge.s enoughAvailable_19
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_19:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 106
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 15
bge.s enoughAvailable_20
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_20:
call B`2 get_j()
dup
brtrue.s IfNotNull_21
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_23
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_23:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
br ifNull_22

IfNotNull_21:
ldloc.1
ldc.i4.s 14
bge.s enoughAvailable_24
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_24:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 9
bge.s enoughAvailable_25
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_25:
dup
call Int32 get_i()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_26
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_26:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.1
ldc.i4.8
bge.s enoughAvailable_27
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_27:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 106
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.3
bge.s enoughAvailable_28
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_28:
call System.Nullable`1[System.Guid] get_j()
stloc.2
ldloca.s 2
dup
call Boolean get_HasValue()
brtrue.s hasValueTrue_31
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_32
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_32:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
br.s ifNull_30

hasValueTrue_31:
call System.Guid GetValueOrDefault()
ldloc.0
ldloc.1
call Int32 WriteGuidFormatD(System.Guid, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_33
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_33:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1

ifNull_30:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1

ifNull_22:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1

ifNull_14:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1

ifNull_9:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1
ldloc.1
sub

ifNull_1:
ret



# System.Collections.Generic.KeyValuePair<System.Int32, System.Int32>
ldarg.1
stloc.0
ldarg.2
stloc.1
ldloc.1
ldarg.0
ldobj System.Collections.Generic.KeyValuePair`2[System.Int32,System.Int32]
ldloc.1
ldc.i4.s 19
bge.s enoughAvailable_0
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_0:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 75
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 101
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 121
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.7
sub
stloc.1
ldloc.1
ldc.i4.s 12
bge.s enoughAvailable_1
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_1:
dup
stloc.2
ldloca.s 2
call Int32 get_Key()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_3
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_3:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.1
ldc.i4.s 11
bge.s enoughAvailable_4
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_4:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 86
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 97
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 101
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.s 9
sub
stloc.1
ldloc.1
ldc.i4.2
bge.s enoughAvailable_5
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_5:
ldloca.s 2
initobj System.Collections.Generic.KeyValuePair`2[System.Int32,System.Int32]
stloc.2
ldloca.s 2
call Int32 get_Value()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_7
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_7:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1
ldloc.1
sub
ret



# System.Nullable<System.Collections.Generic.KeyValuePair<System.Int32, System.Int32>>
ldarg.1
stloc.0
ldarg.2
stloc.1
ldloc.1
ldarg.0
dup
call Boolean get_HasValue()
brtrue.s IfNotNull_0
pop
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_2
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_2:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
ldc.i4.4
br ifNull_1

IfNotNull_0:
call System.Collections.Generic.KeyValuePair`2[System.Int32,System.Int32] GetValueOrDefault()
ldloc.1
ldc.i4.s 19
bge.s enoughAvailable_3
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_3:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 75
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 101
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 121
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.7
sub
stloc.1
ldloc.1
ldc.i4.s 12
bge.s enoughAvailable_4
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_4:
dup
stloc.2
ldloca.s 2
call Int32 get_Key()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_6
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_6:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.1
ldc.i4.s 11
bge.s enoughAvailable_7
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_7:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 86
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 97
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 101
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.s 9
sub
stloc.1
ldloc.1
ldc.i4.2
bge.s enoughAvailable_8
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_8:
ldloca.s 2
initobj System.Collections.Generic.KeyValuePair`2[System.Int32,System.Int32]
stloc.2
ldloca.s 2
call Int32 get_Value()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_10
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_10:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1
ldloc.1
sub

ifNull_1:
ret



# Cameronism.Json.Tests.DelegateBuilderTest+MyStructWithFields<System.Int32, System.Nullable<System.Int32>, System.String>
ldarg.1
stloc.0
ldarg.2
stloc.1
ldloc.1
ldarg.0
ldobj Cameronism.Json.Tests.DelegateBuilderTest+MyStructWithFields`3[System.Int32,System.Nullable`1[System.Int32],System.String]
ldloc.1
ldc.i4.s 20
bge.s enoughAvailable_0
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_0:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 15
bge.s enoughAvailable_1
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_1:
dup
ldfld Int32 i
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_2
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_2:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.1
ldc.i4.s 14
bge.s enoughAvailable_3
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_3:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 107
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 9
bge.s enoughAvailable_4
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_4:
dup
ldfld System.String k
ldloc.0
ldloc.1
call Int32 WriteStringUtf8(System.String, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_5
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_5:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.1
ldc.i4.7
bge.s enoughAvailable_6
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_6:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 106
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.2
bge.s enoughAvailable_7
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_7:
stloc.2
ldloca.s 2
call System.Nullable`1[System.Int32] get_j()
stloc.3
ldloca.s 3
dup
call Boolean get_HasValue()
brtrue.s hasValueTrue_11
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_12
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_12:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
br.s ifNull_10

hasValueTrue_11:
call Int32 GetValueOrDefault()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_13
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_13:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1

ifNull_10:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1
ldloc.1
sub
ret



# System.Nullable<Cameronism.Json.Tests.DelegateBuilderTest+MyStructWithFields<System.Int32, System.Nullable<System.Int32>, System.String>>
ldarg.1
stloc.0
ldarg.2
stloc.1
ldloc.1
ldarg.0
dup
call Boolean get_HasValue()
brtrue.s IfNotNull_0
pop
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_2
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_2:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
ldc.i4.4
br ifNull_1

IfNotNull_0:
call MyStructWithFields`3 GetValueOrDefault()
ldloc.1
ldc.i4.s 20
bge.s enoughAvailable_3
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_3:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 105
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 15
bge.s enoughAvailable_4
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_4:
dup
ldfld Int32 i
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_5
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_5:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.1
ldc.i4.s 14
bge.s enoughAvailable_6
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_6:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 107
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.s 9
bge.s enoughAvailable_7
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_7:
dup
ldfld System.String k
ldloc.0
ldloc.1
call Int32 WriteStringUtf8(System.String, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_8
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_8:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.1
ldc.i4.7
bge.s enoughAvailable_9
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_9:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 106
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 34
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 58
stind.i1
ldloc.1
ldc.i4.5
sub
stloc.1
ldloc.1
ldc.i4.2
bge.s enoughAvailable_10
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_10:
stloc.2
ldloca.s 2
call System.Nullable`1[System.Int32] get_j()
stloc.3
ldloca.s 3
dup
call Boolean get_HasValue()
brtrue.s hasValueTrue_14
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_15
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_15:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
br.s ifNull_13

hasValueTrue_14:
call Int32 GetValueOrDefault()
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_16
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_16:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1

ifNull_13:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1
ldloc.1
sub

ifNull_1:
ret



# <>f__AnonymousType0
ldarg.1
stloc.0
ldarg.2
stloc.1
ldloc.1
ldarg.0
ldind.ref
brtrue.s IfNotNull_0
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_2
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_2:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
ldc.i4.4
br.s ifNull_1

IfNotNull_0:
ldloc.1
ldc.i4.2
bge.s enoughAvailable_3
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_3:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 123
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 125
stind.i1
ldloc.1
ldc.i4.2
sub
stloc.1
ldloc.1
sub

ifNull_1:
ret



# System.Int32[]
ldarg.1
stloc.0
ldarg.2
stloc.1
ldloc.1
ldarg.0
ldind.ref
dup
brtrue.s ifNotNull_0
pop
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_2
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_2:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
ldc.i4.4
br ifNull_1

ifNotNull_0:
ldloc.1
ldc.i4.1
bge.s enoughAvailable_3
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_3:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 91
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1
ldc.i4.0
stloc.2
br.s endLoop_4

beginLoop_5:
ldloc.2
brfalse.s afterComma_7
ldloc.1
ldc.i4.1
bge.s enoughAvailable_8
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_8:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1

afterComma_7:
dup
ldloc.2
ldelem.i4
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_9
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_9:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.2
ldc.i4.1
add
stloc.2

endLoop_4:
dup
ldlen
conv.i4
ldloc.2
bgt.s beginLoop_5
pop
ldloc.1
ldc.i4.1
bge.s enoughAvailable_10
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_10:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 93
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1
ldloc.1
sub

ifNull_1:
ret



# System.Int32[][]
ldarg.1
stloc.0
ldarg.2
stloc.1
ldloc.1
ldarg.0
ldind.ref
dup
brtrue.s ifNotNull_0
pop
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_2
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_2:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
ldc.i4.4
br ifNull_1

ifNotNull_0:
ldloc.1
ldc.i4.1
bge.s enoughAvailable_3
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_3:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 91
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1
ldc.i4.0
stloc.2
br endLoop_4

beginLoop_5:
ldloc.2
brfalse.s afterComma_7
ldloc.1
ldc.i4.1
bge.s enoughAvailable_8
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_8:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1

afterComma_7:
dup
ldloc.2
ldelem.ref
dup
brtrue.s ifNotNull_9
pop
ldloc.1
ldc.i4.4
bge.s enoughAvailable_11
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_11:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 110
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 117
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 108
stind.i1
ldloc.1
ldc.i4.4
sub
stloc.1
br ifNull_10

ifNotNull_9:
ldloc.1
ldc.i4.1
bge.s enoughAvailable_12
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_12:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 91
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1
ldc.i4.0
stloc.3
br.s endLoop_13

beginLoop_14:
ldloc.3
brfalse.s afterComma_16
ldloc.1
ldc.i4.1
bge.s enoughAvailable_17
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_17:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 44
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1

afterComma_16:
dup
ldloc.3
ldelem.i4
ldloc.0
ldloc.1
call Int32 WriteInt32(Int32, Byte*, Int32)
dup
ldc.i4.0
bgt.s success_18
pop
pop
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

success_18:
dup
conv.i
ldloc.0
add
stloc.0
ldc.i4.m1
mul
ldloc.1
add
stloc.1
ldloc.3
ldc.i4.1
add
stloc.3

endLoop_13:
dup
ldlen
conv.i4
ldloc.3
bgt.s beginLoop_14
pop
ldloc.1
ldc.i4.1
bge.s enoughAvailable_19
pop
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_19:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 93
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1

ifNull_10:
ldloc.2
ldc.i4.1
add
stloc.2

endLoop_4:
dup
ldlen
conv.i4
ldloc.2
bgt beginLoop_5
pop
ldloc.1
ldc.i4.1
bge.s enoughAvailable_20
pop
ldarg.2
ldc.i4.s 254
mul
ret

enoughAvailable_20:
ldloc.0
dup
ldc.i4.1
conv.i
add
stloc.0
ldc.i4.s 93
stind.i1
ldloc.1
ldc.i4.1
sub
stloc.1
ldloc.1
sub

ifNull_1:
ret

